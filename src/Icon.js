import React from 'react';
import PropTypes from 'prop-types';
import styled, { css } from 'styled-components';

export const icons = {
  alertTriangle: (
    <g>
      <path d="M 23 21 L 12 2.699219 L 1 21 Z M 13 19 L 11 19 L 11 17 L 13 17 Z M 13 15 L 11 15 L 11 9 L 13 9 Z" />
    </g>
  ),

  arrowDown: (
    <g>
      <path d="M 3.71875 7.78125 L 2.28125 9.21875 L 11.28125 18.21875 L 12 18.90625 L 12.71875 18.21875 L 21.71875 9.21875 L 20.28125 7.78125 L 12 16.0625 Z" />
    </g>
  ),

  arrowRight: (
    <g>
      <path d="M 8.707031 2.292969 L 7.292969 3.707031 L 15.585938 12 L 7.292969 20.292969 L 8.707031 21.707031 L 18.414063 12 Z" />
    </g>
  ),

  arrowTriangleDown: (
    <g>
      <path d="M 6 9 L 12 16 L 18 9 Z" />
    </g>
  ),

  checkboxChecked: (
    <g>
      <path d="M 20 2 L 4 2 C 2.898438 2 2 2.898438 2 4 L 2 20 C 2 21.101563 2.898438 22 4 22 L 20 22 C 21.101563 22 22 21.101563 22 20 L 22 4 C 22 2.898438 21.101563 2 20 2 Z M 9.300781 17.699219 L 4.300781 12.699219 L 5.699219 11.300781 L 9.300781 14.898438 L 18.300781 6.199219 L 19.699219 7.601563 Z" />
    </g>
  ),

  checkboxUnchecked: (
    <g>
      <path d="M 20 4 L 20 20 L 4 20 L 4 4 L 20 4 M 20 2 L 4 2 C 2.898438 2 2 2.898438 2 4 L 2 20 C 2 21.101563 2.898438 22 4 22 L 20 22 C 21.101563 22 22 21.101563 22 20 L 22 4 C 22 2.898438 21.101563 2 20 2 Z" />
    </g>
  ),

  close: (
    <g>
      <path d="M 7.75 6.34375 L 6.34375 7.75 L 10.59375 12 L 6.34375 16.25 L 7.75 17.65625 L 12 13.40625 L 16.25 17.65625 L 17.65625 16.25 L 13.40625 12 L 17.65625 7.75 L 16.25 6.34375 L 12 10.59375 Z" />
    </g>
  ),

  closeCircle: (
    <g>
      <path d="M 12 2 C 6.5 2 2 6.5 2 12 C 2 17.5 6.5 22 12 22 C 17.5 22 22 17.5 22 12 C 22 6.5 17.5 2 12 2 Z M 16.898438 15.5 L 15.5 16.898438 L 12 13.398438 L 8.5 16.898438 L 7.101563 15.5 L 10.601563 12 L 7.101563 8.5 L 8.5 7.101563 L 12 10.601563 L 15.5 7.101563 L 16.898438 8.5 L 13.398438 12 Z" />
    </g>
  ),

  code: (
    <g>
      <path d="M 13 5 L 9 19 L 11 19 L 15 5 Z M 6 7 L 2 12 L 6 17 L 8 17 L 4 12 L 8 7 Z M 16 7 L 20 12 L 16 17 L 18 17 L 22 12 L 18 7 Z" />
    </g>
  ),

  done: (
    <g>
      <path d="M 12 2 C 6.5 2 2 6.5 2 12 C 2 17.5 6.5 22 12 22 C 17.199219 22 21.40625 18.101563 21.90625 13 L 19.90625 13 C 19.40625 16.898438 16 20 12 20 C 7.601563 20 4 16.398438 4 12 C 4 7.601563 7.601563 4 12 4 C 13.398438 4 14.707031 4.398438 15.90625 5 L 17.40625 3.5 C 15.804688 2.601563 14 2 12 2 Z M 20.5 4.875 L 11.1875 13.78125 L 7.5 10.09375 L 6.09375 11.5 L 11.1875 16.59375 L 11.90625 15.90625 L 21.90625 6.3125 Z" />
    </g>
  ),

  infoSquare: (
    <g>
      <path d="M 3 5 L 3 19 C 3 20.105469 3.894531 21 5 21 L 19 21 C 20.105469 21 21 20.105469 21 19 L 21 5 C 21 3.894531 20.105469 3 19 3 L 5 3 C 3.894531 3 3 3.894531 3 5 Z M 13 17 L 11 17 L 11 11 L 13 11 Z M 13 9 L 11 9 L 11 7 L 13 7 Z" />
    </g>
  ),

  infoCircle: (
    <g>
      <path d="M 12 2 C 6.476563 2 2 6.476563 2 12 C 2 17.523438 6.476563 22 12 22 C 17.523438 22 22 17.523438 22 12 C 22 6.476563 17.523438 2 12 2 Z M 13 17 L 11 17 L 11 11 L 13 11 Z M 13 9 L 11 9 L 11 7 L 13 7 Z" />
    </g>
  ),

  ok: (
    <g>
      <path d="M 19.28125 5.28125 L 9 15.5625 L 4.71875 11.28125 L 3.28125 12.71875 L 8.28125 17.71875 L 9 18.40625 L 9.71875 17.71875 L 20.71875 6.71875 Z" />
    </g>
  ),

  okCircle: (
    <g>
      <path d="M 12 2 C 6.476563 2 2 6.476563 2 12 C 2 17.523438 6.476563 22 12 22 C 17.523438 22 22 17.523438 22 12 C 22 6.476563 17.523438 2 12 2 Z M 10.820313 16.847656 L 7.128906 13.160156 L 8.539063 11.746094 L 10.78125 13.980469 L 16.535156 7.898438 L 17.988281 9.273438 Z" />
    </g>
  ),

  radioChecked: (
    <g>
      <path d="M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10s10-4.5,10-10S17.5,2,12,2z M12,4c4.5,0,8,3.5,8,8s-3.5,8-8,8s-8-3.5-8-8S7.5,4,12,4z" />
      <circle cx="12" cy="12" r="3.5" />
    </g>
  ),

  radioCheckedForced: (
    <g>
      <path d="M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10s10-4.5,10-10S17.5,2,12,2z M12,16.9c-2.7,0-4.9-2.2-4.9-4.9S9.3,7.1,12,7.1  s4.9,2.2,4.9,4.9S14.7,16.9,12,16.9z" />
    </g>
  ),

  radioUnchecked: (
    <g>
      <path d="M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10s10-4.5,10-10S17.5,2,12,2z M12,4c4.5,0,8,3.5,8,8s-3.5,8-8,8s-8-3.5-8-8S7.5,4,12,4z" />
    </g>
  ),

  upload: (
    <g>
      <path d="M 12 2 L 6 10 L 10 10 L 10 18 L 14 18 L 14 10 L 18 10 Z M 2 20 L 2 22 L 22 22 L 22 20 Z" />
    </g>
  )
};

const IconUnStyled = ({ className, name }) => (
  <span className={className}>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" version="1.1">
      {icons[name]}
    </svg>
  </span>
);

const inlineCss = props => (props.block
  ? css`
        min-height: 100%;
        min-width: 100%;
      `
  : css`
        height: ${props => (props.sizePx ? `${props.sizePx}px` : '1em')};
        width: ${props => (props.sizePx ? `${props.sizePx}px` : '1em')};
      `);

const Icon = styled(IconUnStyled)`
  display: inline-block;
  line-height: 1;
  ${inlineCss} svg {
    fill: currentColor;
    display: block;
  }
`;

Icon.propTypes = {
  block: PropTypes.bool,
  sizePx: PropTypes.number
};

Icon.defaultProps = {
  inline: false
};

export default Icon;
